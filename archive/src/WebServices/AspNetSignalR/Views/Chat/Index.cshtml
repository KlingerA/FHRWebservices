@{
    ViewBag.Title = "Index";
}

<h2>Chat</h2>
<div class="container">
    <span id="currentUserCount">Aktuell 0 User im Chat</span><br />
    <label for="username">Name</label><br />
    <input type="text" id="username" /><br />
    <label for="message">Nachricht</label><br />
    <input type="text" id="message" /><br />
    <input type="button" id="sendmessage" value="Abschicken" />
    <input type="hidden" id="displayname" />
    <ul id="messageList"></ul>
</div>

@section scripts{
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <!-- diese Ressource wird automatisch von SignalR generiert und enthält einen Proxy für die Hubs -->
    <script src="~/signalr/hubs"></script>

    <script>
        var messageList = document.querySelector("#messageList"),
            sendBtn = document.querySelector("#sendmessage"),
            message = document.querySelector("#message"),
            userName = document.querySelector("#username"),
            userCount = document.querySelector("#currentUserCount");

        // über die URI /signalr/hubs wird von SignalR ein
        // Proxyscript generiert welches Kommunikationsobjekte für
        // alle Hubs liefert
        var chat = $.connection.chatHub;

        // an [hub].client werden alle Methoden definiert,
        // die innerhalb des Servers über Client.All usw.
        // aufgerufen werden
        chat.client.newMessage = function (name, message) {
            var date = new Date();
            var timestamp = "[" + date.getHours() + ":" + date.getMinutes() + ":" + date.getSeconds() + "]";
            var listItem = document.createElement("li");
            listItem.innerHTML = "<strong>" + name + " " + timestamp + ":</strong> " + saveText(message);
            messageList.insertBefore(listItem, messageList.firstChild);
        };

        chat.client.invalidMessage = function (message) {
            var listItem = document.createElement("li");
            listItem.style.color = "red";
            listItem.innerHTML = saveText(message);
            messageList.insertBefore(listItem, messageList.firstChild);
        };

        chat.client.currentUserUpdate = function (userCnt) {
            userCount.innerHTML = "Aktuell sind " + userCnt + " User im Chat";
        }


        $.connection.hub.start().done(function () {

            var cnt = chat.server.getCurrentUserCount().done(function (cnt) {
                var msg = "Du bist allein :-(";
                if (cnt > 1) {
                    msg = "Aktuell sind " + cnt + " User im Chat";
                }
                userCount.innerHTML = msg;
            });

            sendBtn.addEventListener("click", sendFunc);
            message.addEventListener("keyup", function (ev) {
                if (ev.keyCode === 13) {
                    sendFunc();
                }
            });
        });

        function saveText(message) {
            var dummy = document.createElement("div");
            dummy.innerText = message;
            return dummy.innerHTML;
        }

        function sendFunc() {

            var u = userName.value,
                m = message.value;

            // an [hub].server sind alle public Methoden
            // des Hubs verfügbar
            chat.server.send(u, m);
            message.value = "";
            message.focus();
        };

    </script>
}

